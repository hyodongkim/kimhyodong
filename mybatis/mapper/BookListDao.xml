<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.study.springboot.dao.IBookListDao">    
<!-- 도서 목록 가져오기_오름차순 ; 도서 번호 -->
	<select id="booklist" resultType="com.study.springboot.dto.BookListDto">
		SELECT * FROM hp_Book ORDER BY book_Index
	</select>
	
	<!-- 도서 목록 _ 국내도서 ; 도서 번호 오름차순 -->
	<select id="booksKorea" resultType="com.study.springboot.dto.BookListDto">
		SELECT * FROM hp_book WHERE book_Category='0' ORDER BY book_Index
	</select>
		
	<!-- 도서 목록 _ 국외도서 ; 도서 번호 오름차순 -->
	<select id="booksOverseas" resultType="com.study.springboot.dto.BookListDto">
		SELECT * FROM hp_book WHERE book_Category='1' ORDER BY book_Index
	</select>
	
	<!-- 도서 정보 불러오기 -->
 	<select id="booklistbyIndex" resultType="com.study.springboot.dto.BookListDto">
 	select * from hp_Book where book_Index=#{param1}
 	</select>
 	
	<!-- 도서 추가하기 ; 도서 번호, 제목, 작가, 출판사, 내용, 소개, 이미지 -->
	<insert id="addBook" parameterType="com.study.springboot.dto.BookListDto">
		INSERT INTO hp_Book (
		  book_Index, book_Title, book_Writer, book_Company,
		  book_Image, book_Content, book_Introduce, book_Category)
		<!-- 	values(hp_Book_Book_Index.nextval, #{book_Title}, #{book_Writer}, #{book_Company},
					#{book_Image}, #{book_Content}, #{book_Introduce}, #{book_Category}) -->
			<!--  	values(hp_Book_Book_Index.nextval, book_Title=#{param2}, book_Writer=#{param3}, book_Company=#{param4},
					book_Image=#{param5}, book_Content=#{param6}, book_Introduce=#{param7}, book_Category=#{param8})	-->
					values(hp_Book_Book_Index.nextval, #{param1}, #{param2}, #{param3},
					#{param4}, #{param5}, #{param6}, #{param7})
					
	</insert>
	
	<!-- 도서 편집하기 ; 도서 번호로 편집 : 편집버튼으로 번호 얻어오기 
						  ;	도서 제목, 작가, 출판사, 이미지, 내용, 소개 -->
	<update id="updateBook" parameterType="com.study.springboot.dto.BookListDto">
		UPDATE hp_Book set
			book_Title=#{param2}, book_Writer=#{param3}, book_Company=#{param4},
			book_Image=#{param5}, book_Content=#{param6}, book_Introduce=#{param7},
			book_Category=#{param8}
		  WHERE book_Index=#{param1}
	</update>
 	
 	<!-- 도서 삭제하기 ; 도서 인덱스 : 삭제버튼으로 번호 얻어오기! -->
 	<delete id="deleteBook" parameterType="com.study.springboot.dto.BookListDto">
 		DELETE FROM hp_Book WHERE book_Index=#{param1}
 	</delete>
 	
 	<select id="contentView" resultType="com.study.springboot.dto.BookListDto">
 	select * from hp_Book where hp_Index=#{param1}
 	</select>
 	
 	<insert id="write">
 	<selectKey keyProperty="id" resultType="int" order="BEFORE">
 	select hp_Book_book_Index.nextval FROM DUAL
 	</selectKey>
 	INSERT INTO hp_Book (
		  book_Index, book_Title, book_Writer, book_Company,
		  book_Image, book_Content, book_Introduce, book_Category)
			values(hp_Book_Book_Index.nextval, #{book_Title}, #{book_Writer}, #{book_Company},
					#{book_Image}, #{book_Content}, #{book_Introduce}, #{book_Category})
 	</insert>
 	
 	<!-- 좋아요 -->
 	<update id="Like">
		UPDATE hp_Book SET book_Like=Book_Like+1 WHERE book_Index=#{param1}
	</update>
	
	<!-- 싫어요 -->
	<update id="Dislike">
		UPDATE hp_Book SET book_Dislike=Book_Dislike+1 WHERE book_Index=#{param1}
	</update>
	
	<select id="bookForLike" resultType="com.study.springboot.dto.BookListDto">
 	select * from hp_Book where Book_Index=#{param1}
 	</select>
 	
 	<select id="bookForDislike" resultType="com.study.springboot.dto.BookListDto">
 	select * from hp_Book where Book_Index=#{param1}
 	</select>
 	
    
 </mapper>